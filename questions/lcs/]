#include <bits/stdc++.h>

using namespace std;

using ll = long long;
#define int ll
#define endl (char)10

void __dbg() { cerr << endl; }
template <typename T> void __dbg(T t) { cerr << t << endl; }
template <typename T, typename... TRest> void __dbg(T first, TRest... rest) {
  cerr << first << ", ";
  __dbg(rest...);
}
#define dbg(...)                                                               \
  do {                                                                         \
    cerr << "DBG> " << "(" << #__VA_ARGS__ << ") = ";                          \
    __dbg(__VA_ARGS__);                                                        \
  } while (0)

int bs(vector<int> &arr, int t) {
  int l = 0, r = arr.size() - 1;
  while (l <= r) {
    int middle = l + (r - l) / 2;
    if (middle == 0) {
      if (arr[middle] >= t) {
        return middle;
      } else {
        return middle + 1;
      }
    }
    if (arr[middle] >= t && arr[middle - 1] < t) {
      return middle;
    }
    if (arr[middle] >= t) {
      r = middle - 1;
    } else {
      l = middle + 1;
    }
  }
  return -1;
}

string s, t;
num COPS{LINE, COL, DIG, DEF};
void solution() {
  cin >> s >> t;
  vector<vector<int>> dp(s.size(), vector<int>(t.size(), 0));
  for (int i = 0; i < s.size(); i++) {
    for (int j = 0; j < t.size(); j++) {
      dp[i][j] = 0x3f3f3f;
    }
  }

  string word = "";

  int i = s.size() - 1, j = t.size() - 1;
  for (int i = 0; i < s.size(); i++) {
    for (int j = 0; j < t.size(); j++) {
      cout << dp[i][j] << ' ';
    }
    cout << endl;
  }
  while (i > 0 || j > 0) {
    COPS dsp = DEF;
    if (j != 0 && dp[i][j] - dp[i][j - 1] > 0) {
      dsp = LINE;
    }
    if (i != 0 && dp[i][j] - dp[i - 1][j] > 0) {
      dsp = COL;
    }
    if (dsp == DEF) {
      dsp = DIG;
    }

    switch (dsp) {
    case LINE:
      j--;
      break;
    case COL:
      i--;
      break;
    case DIG:
      word.push_back(s[i]);
      i--;
      j--;
      break;
    case DEF:
      break;
    }
  }
  reverse(word.begin(), word.end());
  cout << word << endl;
}

int32_t main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0), cout.tie(0);
  solution();

  return 0;
}
